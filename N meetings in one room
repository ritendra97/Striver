//N meetings in one room

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

class meeting{
    int start;
    int end;
    int index;

    public meeting(int start, int end, int index) {
        this.start = start;
        this.end = end;
        this.index = index;
    }
}

public class Main2 {

    public static void Solution(int start[], int finish[]){

        List<meeting> meet = new ArrayList<>();
        for(int i= 0;i< start.length;i++) {
            meet.add(new meeting(start[i], finish[i],i+1));
        }

        Collections.sort(meet, new Comparator<meeting>() {
            @Override
            public int compare(meeting o1, meeting o2) {
                if(o1.end<o2.end) return -1;
                else if(o1.end>o2.end) return 1;
                else if(o1.index<o2.index) return -1;
                return 1;
            }
        });

        List<Integer> answer = new ArrayList<>();
        answer.add(meet.get(0).index);
        int limit = meet.get(0).end;

        for(int i = 1;i<meet.size();i++){
            if(meet.get(i).start>limit){
                answer.add(meet.get(i).index);
                limit = meet.get(i).end;
            }
        }
        answer.stream().forEach(System.out::println);
    }

    public static void main(String[] args){

        int start[] = {1,3,0,5,8,5}, end[] =  {2,4,5,7,9,9};
        int N = 6;
        Solution(start,end);
    }
}
