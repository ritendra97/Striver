public class Main2 {

	public static int Helper(int arr[], int A[], int B[], int left, int right) {

		int i = 0;
		int j = 0;
		int k = 0;
		int count = 0;

		while (i < left && j < right) {

			if (A[i] < B[j]) {
				arr[k++] = A[i++];
			} else {
				if (A[i] >=2 * B[j])
					count++;
				arr[k++] = B[j++];
			}
		}

		while (i < left) {
			arr[k++] = A[i++];
		}

		while (j < right) {
			arr[k++] = B[j++];
		}

		return count;
	}

	public static int mergeSort(int arr[], int n) {
		int count = 0;
		if (n < 2)
			return 0;

		int mid = n / 2;
		int A[] = new int[mid];
		int B[] = new int[n - mid];

		for (int i = 0; i < mid; i++) {
			A[i] = arr[i];
		}

		for (int j = mid; j < n ; j++) {
			B[j - mid] = arr[j];
		}
		count += mergeSort(A, mid);
		count += mergeSort(B, n - mid);
		count += Helper(arr, A, B, mid, n - mid);

		return count;
	}

	public static void main(String[] args) {
		int arr[] = { 1, 3, 2, 3, 1 };
		System.out.println(mergeSort(arr, arr.length));
	}
}
